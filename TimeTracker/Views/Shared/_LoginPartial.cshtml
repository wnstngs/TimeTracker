@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Options
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
	var requestCulture = Context.Features.Get<IRequestCultureFeature>();
	var cultureItems = LocOptions.Value.SupportedUICultures
		.Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
		.ToList();
}

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		@await Html.PartialAsync("_AdminActionsPartial")
		<li class="nav-item">
			<a class="nav-link text-dark"
			   asp-area="Identity"
			   asp-page="/Account/Manage/Index"
			   title="Manage">
				@Localizer["Hello"] @User.Identity?.Name!
			</a>
		</li>
		<li class="nav-item">
			<div class="dropdown">
				<form asp-controller="Localization" asp-action="SetLanguage"
				      asp-route-returnUrl="@Context.Request.Path">
					<select class="form-select" name="culture" onchange="this.form.submit();"
					        asp-for="@requestCulture.RequestCulture.UICulture.Name"
					        asp-items="cultureItems">
					</select>
				</form>
			</div>
		</li>
		<li class="nav-item">
			<form class="form-inline"
			      asp-area="Identity"
			      asp-page="/Account/Logout"
			      asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">
					@Localizer["Logout"]
				</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">
				@Localizer["Login"]
			</a>
		</li>
	}
</ul>