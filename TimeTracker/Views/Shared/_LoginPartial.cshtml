@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer

<ul class="navbar-nav">
	@*
		Check if the user is logged in... If so, we display the log-out button. 
		If not, we display the log-in button.
	*@
	@if (SignInManager.IsSignedIn(User))
	{
		@await Html.PartialAsync("_AdminActionsPartial")
		<li class="nav-item">
			<a class="nav-link text-dark"
			   asp-area="Identity"
			   asp-page="/Account/Manage/Index"
			   title="Manage">
				@Localizer["Hello"] @User.Identity?.Name!
			</a>
		</li>
		<li class="nav-item">
			<div class="dropdown">
				<button class="btn nav-link text-dark dropdown-toggle" type="button"
						id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
					@Localizer["Language"]
				</button>
				<ul class="dropdown-menu" aria-labelledby="languageDropdown">
					<li><button class="dropdown-item" type="button">English</button></li>
					<li><button class="dropdown-item" type="button">Latviešu</button></li>
				</ul>
			</div>
		</li>
		<li class="nav-item">
			<form class="form-inline"
			      asp-area="Identity"
			      asp-page="/Account/Logout"
			      asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">
					@Localizer["Logout"]
				</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">
				@Localizer["Login"]
			</a>
		</li>
	}
</ul>