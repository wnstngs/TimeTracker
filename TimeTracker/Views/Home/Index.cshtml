@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@model TimeEntriesListViewModel
@inject IAuthorizationService AuthorizationService
@inject UserManager<ApplicationUser> UserManager

@{
	ViewData["Title"] = "Time Tracker";

	var currentUser = await UserManager.GetUserAsync(User);
	var isAdmin = currentUser != null
	              && await UserManager.IsInRoleAsync(currentUser, Roles.Admin);

	// Date for Monday of the current week.
	var weekMonday = Model.Week;
	// Date for Friday (Monday + 4 days) of the current week.
	var weekFriday = Model.Week.AddDays(4);
	// Date for Monday of the previous week.
	var previousWeekMonday = weekMonday.AddDays(-7);
	// Date for Monday of the next week.
	var nextWeekMonday = weekMonday.AddDays(7);
}

<div class="row justify-content-end mb-2">
	<div class="col-4">
		<div class="d-flex justify-content-center">
			<a href="@Url.Action("Index", "Home", new { weekDate = previousWeekMonday.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-light btn-sm me-2">
				<i class="bi bi-arrow-left text-dark"></i>
			</a>
			<h4 class="fw-bold">
				@weekMonday.Day/@weekMonday.Month/@weekMonday.Year — @weekFriday.Day/@weekFriday.Month/@weekFriday.Year
			</h4>
			@if (Model.Week != Model.CurrentWeek)
			{
				<a href="@Url.Action("Index", "Home", new { weekDate = nextWeekMonday.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
				   class="btn btn-light btn-sm ms-2">
					<i class="bi bi-arrow-right text-dark"></i>
				</a>
			}
		</div>
	</div>
	<div class="col-4">
		<div class="d-flex justify-content-end">
			@if (Model.Week == Model.CurrentWeek &&
			     !Model.IsWeekClosed)
			{
				<button type="button" class="btn btn-primary">
					Complete Week
				</button>
			}
		</div>
	</div>
</div>

<div class="row">
	<div class="col-sm">
		<button class="btn btn-outline-primary w-100" data-bs-toggle="modal"
		        data-bs-target="#createTimeEntryModal"
		        data-bs-date="@Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)"
		        data-bs-week="@Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)">
			<span class="bi bi-plus-lg"></span>
			&nbsp;@Model.Week.DayOfWeek (@Model.Week.Day)
		</button>
	</div>
	<div class="col-sm">
		<button class="btn btn-outline-primary w-100" data-bs-toggle="modal"
		        data-bs-target="#createTimeEntryModal"
		        data-bs-date="@Model.Week.AddDays(1).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)"
		        data-bs-week="@Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)">
			<span class="bi bi-plus-lg"></span>
			&nbsp;@Model.Week.AddDays(1).DayOfWeek (@Model.Week.AddDays(1).Day)
		</button>
	</div>
	<div class="col-sm">
		<button class="btn btn-outline-primary w-100" data-bs-toggle="modal"
		        data-bs-target="#createTimeEntryModal" data-bs-date="@Model.Week.AddDays(2).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)"
		        data-bs-week="@Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)">
			<span class="bi bi-plus-lg"></span>
			&nbsp;@Model.Week.AddDays(2).DayOfWeek (@Model.Week.AddDays(2).Day)
		</button>
	</div>
	<div class="col-sm">
		<button class="btn btn-outline-primary w-100" data-bs-toggle="modal"
		        data-bs-target="#createTimeEntryModal" data-bs-date="@Model.Week.AddDays(3).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)"
		        data-bs-week="@Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)">
			<span class="bi bi-plus-lg"></span>
			&nbsp;@Model.Week.AddDays(3).DayOfWeek (@Model.Week.AddDays(3).Day)
		</button>
	</div>
	<div class="col-sm">
		<button class="btn btn-outline-primary w-100" data-bs-toggle="modal"
		        data-bs-target="#createTimeEntryModal" data-bs-date="@Model.Week.AddDays(4).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)"
		        data-bs-week="@Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks)">
			<span class="bi bi-plus-lg"></span>
			&nbsp;@Model.Week.AddDays(4).DayOfWeek (@Model.Week.AddDays(4).Day)
		</button>
	</div>
</div>
<div class="row">
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries)
			{
				@if (timeEntry.Week == Model.Week)
				{
					<li>
						<div class="card">
							<div class="card-header">
								<p class="card-text">
									@timeEntry.HoursSpent h @timeEntry.MinutesSpent min
								</p>
							</div>
							<div class="card-body">
								<p class="card-text">
									@timeEntry.Comment
								</p>
								<a href="#" class="btn btn-primary btn-sm">Edit</a>
								<a class="btn btn-danger btn-sm" data-bs-toggle="modal"
								   data-bs-target="#deleteTimeEntryModal" data-bs-id="@timeEntry.Id">
									Delete
								</a>
							</div>
						</div>
					</li>
				}
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries)
			{
				@if (timeEntry.Week == Model.Week.AddDays(1))
				{
					<li>
						<div class="card">
							<div class="card-header">
								<p class="card-text">
									@timeEntry.HoursSpent h @timeEntry.MinutesSpent min
								</p>
							</div>
							<div class="card-body">
								<p class="card-text">
									@timeEntry.Comment
								</p>
								<a href="#" class="btn btn-primary btn-sm">Edit</a>
								<a class="btn btn-danger btn-sm" data-bs-toggle="modal"
								   data-bs-target="#deleteTimeEntryModal" data-bs-id="@timeEntry.Id">
									Delete
								</a>
							</div>
						</div>
					</li>
				}
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries)
			{
				@if (timeEntry.Week == Model.Week.AddDays(2))
				{
					<li>
						<div class="card">
							<div class="card-header">
								<p class="card-text">
									@timeEntry.HoursSpent h @timeEntry.MinutesSpent min
								</p>
							</div>
							<div class="card-body">
								<p class="card-text">
									@timeEntry.Comment
								</p>
								<a href="#" class="btn btn-primary btn-sm">Edit</a>
								<a class="btn btn-danger btn-sm" data-bs-toggle="modal"
								   data-bs-target="#deleteTimeEntryModal" data-bs-id="@timeEntry.Id">
									Delete
								</a>
							</div>
						</div>
					</li>
				}
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries)
			{
				@if (timeEntry.Week == Model.Week.AddDays(3))
				{
					<li>
						<div class="card">
							<div class="card-header">
								<p class="card-text">
									@timeEntry.HoursSpent h @timeEntry.MinutesSpent min
								</p>
							</div>
							<div class="card-body">
								<p class="card-text">
									@timeEntry.Comment
								</p>
								<a href="#" class="btn btn-primary btn-sm">Edit</a>
								<a class="btn btn-danger btn-sm" data-bs-toggle="modal"
								   data-bs-target="#deleteTimeEntryModal" data-bs-id="@timeEntry.Id">
									Delete
								</a>
							</div>
						</div>
					</li>
				}
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries)
			{
				@if (timeEntry.Week == Model.Week.AddDays(4))
				{
					<li>
						<div class="card">
							<div class="card-header">
								<p class="card-text">
									@timeEntry.HoursSpent h @timeEntry.MinutesSpent min
								</p>
							</div>
							<div class="card-body">
								<p class="card-text">
									@timeEntry.Comment
								</p>
								<a href="#" class="btn btn-primary btn-sm">Edit</a>
								<a class="btn btn-danger btn-sm" data-bs-toggle="modal"
								   data-bs-target="#deleteTimeEntryModal" data-bs-id="@timeEntry.Id">
									Delete
								</a>
							</div>
						</div>
					</li>
				}
			}
		</ul>
	</div>
</div>

@await Html.PartialAsync("Create", new TimeEntryFormViewModel())
@await Html.PartialAsync("Delete")