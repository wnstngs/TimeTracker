@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@model TimeEntriesListViewModel
@inject IAuthorizationService AuthorizationService
@inject UserManager<ApplicationUser> UserManager
@inject IViewLocalizer Localizer

@{
	ViewData["Title"] = @Localizer["Title"];

	var currentUser = await UserManager.GetUserAsync(User);
	var isAdmin = currentUser != null
	              && await UserManager.IsInRoleAsync(currentUser, Roles.Admin);

	// Date for Monday of the current week.
	var weekMonday = Model.Week;
	// Date for Friday (Monday + 4 days) of the current week.
	var weekFriday = Model.Week.AddDays(4);
	// Date for Monday of the previous week.
	var previousWeekMonday = weekMonday.AddDays(-7);
	// Date for Monday of the next week.
	var nextWeekMonday = weekMonday.AddDays(7);
}

<div class="row justify-content-end mb-2">
	<div class="col-4">
		<div class="d-flex justify-content-center">
			<a href="@Url.Action("Index", "Home", new { weekDate = previousWeekMonday.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-light btn-sm me-2">
				<i class="bi bi-arrow-left text-dark"></i>
			</a>
			<h4 class="fw-bold">
				@weekMonday.Day/@weekMonday.Month/@weekMonday.Year — @weekFriday.Day/@weekFriday.Month/@weekFriday.Year
			</h4>
			@if (Model.Week != Model.CurrentWeek)
			{
				<a href="@Url.Action("Index", "Home", new { weekDate = nextWeekMonday.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
				   class="btn btn-light btn-sm ms-2">
					<i class="bi bi-arrow-right text-dark"></i>
				</a>
			}
		</div>
	</div>
	<div class="col-4">
		<div class="d-flex justify-content-end">
			@if (Model.Week == Model.CurrentWeek &&
			     !Model.IsWeekClosed)
			{
				<button type="button" class="btn btn-primary">
					Complete Week
				</button>
			}
		</div>
	</div>
</div>

<div class="row">
	<div class="col-sm">
		@if (Model.Week != Model.CurrentWeek)
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 disabled"
			   data-bs-toggle="modal" data-bs-target="#modal" aria-disabled="true">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.DayOfWeek&nbsp;@Model.Week.Day
			</a>
		}
		else
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 btn-modal"
			   data-bs-toggle="modal" data-bs-target="#modal">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.DayOfWeek&nbsp;@Model.Week.Day
			</a>
		}
	</div>
	<div class="col-sm">
		@if (Model.Week != Model.CurrentWeek)
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(1).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 disabled"
			   data-bs-toggle="modal" data-bs-target="#modal" aria-disabled="true">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(1).DayOfWeek&nbsp;@Model.Week.AddDays(1).Day
			</a>
		}
		else
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(1).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 btn-modal"
			   data-bs-toggle="modal" data-bs-target="#modal">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(1).DayOfWeek&nbsp;@Model.Week.AddDays(1).Day
			</a>
		}
	</div>
	<div class="col-sm">
		@if (Model.Week != Model.CurrentWeek)
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(2).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 disabled"
			   data-bs-toggle="modal" data-bs-target="#modal" aria-disabled="true">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(2).DayOfWeek&nbsp;@Model.Week.AddDays(2).Day
			</a>
		}
		else
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(2).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 btn-modal"
			   data-bs-toggle="modal" data-bs-target="#modal">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(2).DayOfWeek&nbsp;@Model.Week.AddDays(2).Day
			</a>
		}
	</div>
	<div class="col-sm">
		@if (Model.Week != Model.CurrentWeek)
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(3).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 disabled"
			   data-bs-toggle="modal" data-bs-target="#modal" aria-disabled="true">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(3).DayOfWeek&nbsp;@Model.Week.AddDays(3).Day
			</a>
		}
		else
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(3).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 btn-modal"
			   data-bs-toggle="modal" data-bs-target="#modal">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(3).DayOfWeek&nbsp;@Model.Week.AddDays(3).Day
			</a>
		}
	</div>
	<div class="col-sm">
		@if (Model.Week != Model.CurrentWeek)
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(4).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 disabled"
			   data-bs-toggle="modal" data-bs-target="#modal" aria-disabled="true">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(4).DayOfWeek&nbsp;@Model.Week.AddDays(4).Day
			</a>
		}
		else
		{
			<a href="@Url.Action("Create", "Home", new { week = Model.Week.ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks), date = Model.Week.AddDays(4).ToString(TimeTracker.Common.Constants.DateTimeFormatForWeeks) })"
			   class="btn btn-outline-primary w-100 btn-modal"
			   data-bs-toggle="modal" data-bs-target="#modal">
				<span class="bi bi-plus-lg"></span>
				&nbsp;@Model.Week.AddDays(4).DayOfWeek&nbsp;@Model.Week.AddDays(4).Day
			</a>
		}
	</div>
</div>
<div class="row">
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries
				.Where(timeEntry => timeEntry.Date == Model.Week))
			{
				<li>
					<div class="card">
						<div class="card-header">
							<p class="card-text">
								@timeEntry.HoursSpent @Localizer["Hours"] @timeEntry.MinutesSpent @Localizer["Minutes"]
							</p>
						</div>
						<div class="card-body">
							<p class="card-text">
								@timeEntry.Comment
							</p>
							@if (Model.Week == Model.CurrentWeek && !Model.IsWeekClosed)
							{
								<a href="@Url.Action("Edit", "Home", new { id = timeEntry.Id })"
								   class="btn btn-primary btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Edit"]
								</a>
								<a href="@Url.Action("Delete", "Home", new { id = timeEntry.Id })"
								   class="btn btn-danger btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Delete"]
								</a>
							}
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries
				.Where(timeEntry => timeEntry.Date == Model.Week.AddDays(1)))
			{
				<li>
					<div class="card">
						<div class="card-header">
							<p class="card-text">
								@timeEntry.HoursSpent @Localizer["Hours"] @timeEntry.MinutesSpent @Localizer["Minutes"]
							</p>
						</div>
						<div class="card-body">
							<p class="card-text">
								@timeEntry.Comment
							</p>
							@if (Model.Week == Model.CurrentWeek && !Model.IsWeekClosed)
							{
								<a href="@Url.Action("Edit", "Home", new { id = timeEntry.Id })"
								   class="btn btn-primary btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Edit"]
								</a>
								<a href="@Url.Action("Delete", "Home", new { id = timeEntry.Id })"
								   class="btn btn-danger btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Delete"]
								</a>
							}
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries
				.Where(timeEntry => timeEntry.Date == Model.Week.AddDays(2)))
			{
				<li>
					<div class="card">
						<div class="card-header">
							<p class="card-text">
								@timeEntry.HoursSpent @Localizer["Hours"] @timeEntry.MinutesSpent @Localizer["Minutes"]
							</p>
						</div>
						<div class="card-body">
							<p class="card-text">
								@timeEntry.Comment
							</p>
							@if (Model.Week == Model.CurrentWeek && !Model.IsWeekClosed)
							{
								<a href="@Url.Action("Edit", "Home", new { id = timeEntry.Id })"
								   class="btn btn-primary btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Edit"]
								</a>
								<a href="@Url.Action("Delete", "Home", new { id = timeEntry.Id })"
								   class="btn btn-danger btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Delete"]
								</a>
							}
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries
				.Where(timeEntry => timeEntry.Date == Model.Week.AddDays(3)))
			{
				<li>
					<div class="card">
						<div class="card-header">
							<p class="card-text">
								@timeEntry.HoursSpent @Localizer["Hours"] @timeEntry.MinutesSpent @Localizer["Minutes"]
							</p>
						</div>
						<div class="card-body">
							<p class="card-text">
								@timeEntry.Comment
							</p>
							@if (Model.Week == Model.CurrentWeek && !Model.IsWeekClosed)
							{
								<a href="@Url.Action("Edit", "Home", new { id = timeEntry.Id })"
								   class="btn btn-primary btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Edit"]
								</a>
								<a href="@Url.Action("Delete", "Home", new { id = timeEntry.Id })"
								   class="btn btn-danger btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Delete"]
								</a>
							}
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
	<div class="col-sm">
		<ul class="list-unstyled">
			@foreach (var timeEntry in Model.CurrentWeekEntries
				.Where(timeEntry => timeEntry.Date == Model.Week.AddDays(4)))
			{
				<li>
					<div class="card">
						<div class="card-header">
							<p class="card-text">
								@timeEntry.HoursSpent @Localizer["Hours"] @timeEntry.MinutesSpent @Localizer["Minutes"]
							</p>
						</div>
						<div class="card-body">
							<p class="card-text">
								@timeEntry.Comment
							</p>
							@if (Model.Week == Model.CurrentWeek && !Model.IsWeekClosed)
							{
								<a href="@Url.Action("Edit", "Home", new { id = timeEntry.Id })"
								   class="btn btn-primary btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Edit"]
								</a>
								<a href="@Url.Action("Delete", "Home", new { id = timeEntry.Id })"
								   class="btn btn-danger btn-sm btn-modal" data-bs-toggle="modal"
								   data-bs-target="#modal">
									@Localizer["Delete"]
								</a>
							}
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
</div>

<div class="modal fade" id="modal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			Loading...
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		$('main').on('click', '.btn-modal', (event) => {
			event.preventDefault();
		
			const url = event.target.getAttribute('href');
			$('.modal-content').load(url);
		});

		const modal = document.getElementById('modal');
		modal.addEventListener('hide.bs.modal', function () {
			$('.modal-content').html(`Loading...`);
		});
	</script>
}